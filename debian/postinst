#!/bin/bash
# postinst script for linuxmuster
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

# Source debconf library.
. /usr/share/debconf/confmodule

db_version 2.0

releasenr=1
releasename="paedML Linux 3.0"
codename=Entaklemmer
oldissue="Linux-Musterloesung 3.0 Build"

# check if all templates present
for i in linuxmuster-base/intro linuxmuster-base/country linuxmuster-base/state \
         linuxmuster-base/location linuxmuster-base/schoolname shared/organization \
         linuxmuster-base/servername linuxmuster-base/domainname linuxmuster-base/workgroup \
         linuxmuster-base/fwconfig linuxmuster-base/externtype linuxmuster-base/externip \
         linuxmuster-base/externmask linuxmuster-base/gatewayip linuxmuster-base/dnsforwarders \
         linuxmuster-base/dsluser linuxmuster-base/dslpasswd linuxmuster-base/smtprelay \
         linuxmuster-base/rootpw linuxmuster-base/rootpw_confirm linuxmuster-base/adminpw \
         linuxmuster-base/adminpw_confirm linuxmuster-base/pgmadminpw linuxmuster-base/pgmadminpw_confirm \
         linuxmuster-base/wwwadminpw linuxmuster-base/wwwadminpw_confirm linuxmuster-base/ipcoppw \
         linuxmuster-base/ipcoppw_confirm linuxmuster-base/sambasid linuxmuster-base/internmask \
         linuxmuster-base/internmask_short linuxmuster-base/internsubrange linuxmuster-base/nicmenu \
         linuxmuster-base/ifmenu linuxmuster-base/mac_extern linuxmuster-base/mac_intern \
         linuxmuster-base/mac_wlan linuxmuster-base/mac_dmz linuxmuster-base/imaging \
         shared/present-sun-dlj-v1-1 shared/accepted-sun-dlj-v1-1; do

	if ! db_get linuxmuster-base/$i; then
		db_set linuxmuster-base/$i "" || true
		db_go
	fi

done

case "$1" in
    configure)

      # read linuxmuster defaults
      . /usr/share/linuxmuster/config/dist.conf

      # make configs executable so that perl scripts can source it
      chmod 755 /usr/share/linuxmuster/config/dist.conf
      chmod 755 /etc/linuxmuster/backup.conf
      [ -e /etc/default/linuxmuster-base ] && chmod 755 /etc/default/linuxmuster-base

      # only root may use helperfunctions.sh
      chmod 600 $HELPERFUNCTIONS

      # check all necessary dirs and links and create them if needed
      for i in $NETLOGONDIR $PROGSDIR $CDSDIR $BACKUPDIR $BACKUPMNTPOINT \
               $LOGINCACHE $LOGDIR; do

        [ -d "$i" ] || mkdir -p $i

      done

      # add startup scripts to runlevels
      update-rc.d linuxmuster-base defaults
      update-rc.d linuxmuster-nic-setup start 40 S .

      # create and correct dirs and files
      [ -d /etc/skel/windows ] && rm -rf /etc/skel/windows
      [ -d /etc/skel/cups-pdf ] && rm -rf /etc/skel/cups-pdf
      [ -d /var/lib/rembo/files/global ] || mkdir -p /var/lib/rembo/files/global
      [ -e /var/lib/rembo/files/global/wimport_data ] || touch /var/lib/rembo/files/global/wimport_data
      [ -e /etc/linuxmuster/workstations ] || touch /etc/linuxmuster/workstations
      [ -e "$BLOCKEDHOSTSINTERNET" ] || touch $BLOCKEDHOSTSINTERNET
      [ -e "$BLOCKEDHOSTSINTRANET" ] || touch $BLOCKEDHOSTSINTRANET
      [ -e "$UNFILTEREDHOSTS" ] || touch $UNFILTEREDHOSTS

      # dummy dhcpd.conf
      if [ ! -f "$DHCPDCONF" ]; then
        [ -d "${DHCPDCONF%/*}" ] || mkdir -p ${DHCPDCONF%/*}
        touch $DHCPDCONF
      fi

      # system groups and users which are needed by udevd
      for i in fuse kvm nvram rdma scanner tss; do
        if ! grep -q ^${i}: /etc/group; then
          addgroup --system $i
        fi
      done
      if ! grep -q ^tss: /etc/passwd; then
        adduser --system --no-create-home --ingroup tss --disabled-login tss
      fi

      # upgrade tasks
      if [ -e "$INSTALLED" ]; then

        if ! . $HELPERFUNCTIONS; then
          echo "Cannot read $HELPERFUNCTIONS!"
          exit 1
        fi

        # check if smtprelay is in $NETWORKSETTINGS
        if ! grep -q smtprelay $NETWORKSETTINGS; then
          db_get linuxmuster/base smtprelay || true
          smtprelay=$RET
          smtprelay=${smtprelay#[0-9] }
          echo "smtprelay=\"$smtprelay\"" >> $NETWORKSETTINGS
        fi

        # messages for config file headers
        message1="Don\'t edit this file\, it will be overwritten on package upgrade\!"
        message2="This file was modified by linuxmuster-setup on"
        message3=`date`

        # some variables we need for patching
        # added imaging (1.2-6)
        servername=`hostname -s`
        domainname=`dnsdomainname`
        db_get linuxmuster-base/imaging || true
        imaging=$RET
        db_get linuxmuster-base/country || true
        country=$RET
        db_get linuxmuster-base/state || true
        state=$RET
        db_get linuxmuster-base/location || true
        location=$RET
        db_get linuxmuster-base/schoolname || true
        schoolname=$RET
        db_get linuxmuster-base/workgroup || true
        workgroup=$RET
        workgroup=${workgroup#[0-9] }
        internsub=`echo $serverip | awk -F. '{ print $2 }'`
	serverrev_short=1.1.$internsub
	ipcoprev_short=254.1.$internsub

        # patch samba
        sed -e "s/@@message1@@/${message1}/g
                s/@@message2@@/${message2}/g
                s/@@message3@@/${message3}/g
                s/@@serverip@@/${serverip}/g
                s/@@internmask@@/${internmask}/g
                s/@@workgroup@@/${workgroup}/g
                s/@@domadmin@@/${DOMADMIN}/g
                s/@@administrator@@/${ADMINISTRATOR}/g
                s/@@domadmins@@/${DOMADMINS}/g
                s/@@teachersgroup@@/${TEACHERSGROUP}/g
                s/@@basedn@@/${basedn}/g" $SMBCONFTEMPLATE > /etc/samba/smb.conf

	# samba reload only if postgres and/or samba are running
	if ps ax | grep slapd | grep -v grep &> /dev/null; then
		if ps ax | grep smbd | grep -v grep &> /dev/null; then
			/etc/init.d/samba reload
	        	# restore samba ldap admin password
        		smbpasswd -w `cat /etc/ldap.secret`
		else
			echo "Samba is not running! Skipping samba reload!"
			echo "You have to restart samba after package update!"
		fi
	else
		echo "The LDAP daemon (slapd) is not running! Skipping samba reload!"
		echo "You have to reload samba after package update!"
	fi

        # remove mem-cache mod from apache2
#        if [ -L /etc/apache2/mods-enabled/mem_cache.load ]; then
#          rm /etc/apache2/mods-enabled/mem_cache.load
#          apache_reload=yes
#        fi

        # apache2 default has changed
#        apache_default=/etc/apache2/sites-available/default
#        if ! grep -q "/people/students" $apache_default; then
#          cp -f /var/lib/linuxmuster/config-static$apache_default $apache_default
#          apache_reload=yes
#        fi

        # apache2 adding port 242 for schulkonsole
        apache_ports=/etc/apache2/ports.conf
        if ! grep -q 242 $apache_ports; then
          cp -f /var/lib/linuxmuster/config-static$apache_ports $apache_ports
          apache_reload=yes
        fi

	# removing schulkonsole's obsolete apache2 configuration
	if [ -L /etc/apache2/conf.d/schulkonsole ]; then
		rm /etc/apache2/conf.d/schulkonsole
          apache_reload=yes
        fi

	# create new certificate skript and create new certificate
	if [ ! -e "$SCRIPTSDIR/create-ssl-cert.sh" ]; then
		echo "Creating new server certificate ..."
		sed -e "s/@@country@@/${country}/
			s/@@state@@/${state}/
			s/@@location@@/${location}/
			s/@@schoolname@@/${schoolname}/
			s/@@servername@@/${servername}/
			s/@@domainname@@/${domainname}/g
			s/@@administrator@@/${ADMINISTRATOR}/" /var/lib/linuxmuster/config-dynamic/01_certificates/create-ssl-cert.sh > $SCRIPTSDIR/create-ssl-cert.sh
		chmod 744 $SCRIPTSDIR/create-ssl-cert.sh
		$SCRIPTSDIR/create-ssl-cert.sh
		apache_reload=yes
	fi

        # reload apache if necessary
	if ps ax | grep apache2 | grep -v grep &> /dev/null; then
	        [ "$apache_reload" = "yes" ] && /etc/init.d/apache2 force-reload
	else
		echo "Apache2 is not running! Skipping apache2 reload!"
		echo "You have to reload apache2 service after package update!"
	fi

        # repair ogo configuration
        ogoconfig=/var/lib/opengroupware.org/.libFoundation/Defaults/NSGlobalDomain.plist
        if ! grep -q LSAuthLDAPServer $ogoconfig; then
          dbpasswd=`grep password $ogoconfig | awk -F= '{ print $2 }' | awk -F\; '{ print $1 }'`
          cp -f /var/lib/linuxmuster/config-static$ogoconfig $ogoconfig
          sed -e "s/\"skyrix_id\" =.*/\"skyrix_id\" = $servername-ogo;/
                  s/LSAuthLDAPServerRoot =.*/LSAuthLDAPServerRoot = \"ou=accounts,$basedn\";/
                  s/password =.*/password = $dbpasswd;/" $ogoconfig > $ogoconfig.tmp
                  cp -f $ogoconfig.tmp $ogoconfig && rm -f $ogoconfig.tmp
          chown ogo:ogo /var/lib/opengroupware.org -R
          chmod 640 $ogoconfig
          /etc/init.d/opengroupware.org restart
        fi

        # fixing pam configuration
        if grep ^account /etc/pam.d/login | grep -q pam_access.so; then
  	  echo "pam configuration is up to date. :-)"
        else
          echo "Updating pam configuration ..."
          cp -f /var/lib/linuxmuster/config-static/etc/pam.d/* /etc/pam.d
          cp -f /var/lib/linuxmuster/config-static/etc/nsswitch.conf /etc
          sed -e "s/@@administrator@@/$ADMINISTRATOR/" /var/lib/linuxmuster/config-dynamic/17_admins/access.conf > /etc/security/access.conf
	  echo "ATTENTION!"
	  echo "Only root and $ADMINISTRATOR are allowed to login on the server!"
	  echo "To change this behaviour you have to edit /etc/security/access.conf!"
        fi

        # update cron scripts
        # ntpdate
        if [ -e /etc/cron.hourly/ntpdate ]; then
          echo "Removing ntpdate cron script ..."
          rm /etc/cron.hourly/ntpdate
        fi

        # postfix
        # updating main.cf
#        if ! grep -q smtp_sasl_auth_enable /etc/postfix/main.cf; then
#          echo "Preparing postfix configuration for smtp auth ..."
#          cp -f /etc/postfix/main.cf /etc/postfix/main.cf-dpkg.orig
#          sed -e "s/@@servername@@/${servername}/g
#                  s/@@domainname@@/${domainname}/g
#                  s/@@smtprelay@@/${smtprelay}/g
#                  s/@@internalnet@@/${internalnet}/g
#                  s/@@internmask_short@@/${internmask_short}/g" /var/lib/linuxmuster/config-dynamic/16_mail/main.cf > /etc/postfix/main.cf
#          postfix reload
#        fi
#        # write smtp_auth file
#        if [ ! -e /etc/postfix/smtp_auth ]; then
#          if [ -n "$smtprelay" ]; then
#            echo "# $smtprelay		username:password" > /etc/postfix/smtp_auth
#          else
#            echo "# change smtp.relay.host to the FQDN of your smtp relay host" > /etc/postfix/smtp_auth
#            echo "# and uncomment the next line to activate smtp authentication" >> /etc/postfix/smtp_auth
#            echo "# smtp.relay.host		username:password" >> /etc/postfix/smtp_auth
#          fi
#          chmod 600 /etc/postfix/smtp_auth
#        fi
#        # master.cf
#        if grep -q "# only used by postfix-tls" /etc/postfix/master.cf; then
#          cp /etc/postfix/master.cf /etc/postfix/master.cf-dpkg.orig
#          echo "Updating /etc/postfix/master.cf ..."
#          cp /var/lib/linuxmuster/config-static/etc/postfix/master.cf /etc/postfix
#          upgrade=yes
#        fi

        # bind9
        # permissions
        chown root:bind /etc/bind
        chmod 775 /etc/bind
        chown root:bind /etc/bind/db.10
        chown root:bind /etc/bind/db.linuxmuster
        chmod 664 /etc/bind/db.10
        chmod 664 /etc/bind/db.linuxmuster
        # including rndc.key
#        if ! grep -q rndc-key /etc/bind/named.conf.linuxmuster; then
#          echo "Fixing ddns update ..."
#          /etc/init.d/bind9 stop
#	  bind_stopped=yes
#          cp /etc/bind/named.conf.linuxmuster /etc/bind/named.conf.linuxmuster.dpkg-orig
#          sed -e "s/@@domainname@@/${domainname}/g" /var/lib/linuxmuster/config-dynamic/04_bind9/named.conf.linuxmuster > /etc/bind/named.conf.linuxmuster
#          if [ ! -e /etc/bind/rndc.key ]; then
#            echo "Creating /etc/bind/rndc.key ..."
#            rndc-confgen -a -u bind
#          else
#            chown bind /etc/bind/rndc.key
#          fi
#        fi
#        # fix wrong reversed addresses
#	if grep -q 0.0.10 /etc/bind/db.10; then
#          echo "Fixing wrong reversed dns addresses ..."
#          cp /etc/bind/db.10 /etc/bind/db.10.dpkg-orig
#          cp /etc/bind/db.linuxmuster /etc/bind/db.linuxmuster.dpkg-orig
#	  [ -n "$bind_stopped" ] || /etc/init.d/bind9 stop
#	  bind_stopped=yes
#	  sed -e "s/@@domainname@@/${domainname}/g
#	          s/@@servername@@/${servername}/g
#	          s/@@serverrev_short@@/${serverrev_short}/
#	          s/@@ipcoprev_short@@/${ipcoprev_short}/" /var/lib/linuxmuster/config-dynamic/04_bind9/db.10 > /etc/bind/db.10
#	  sed -e "s/@@domainname@@/${domainname}/g
#	          s/@@servername@@/${servername}/g
#	          s/@@serverip@@/${serverip}/
#	          s/@@ipcopip@@/${ipcopip}/" /var/lib/linuxmuster/config-dynamic/04_bind9/db.linuxmuster > /etc/bind/db.linuxmuster
#	  # remove journaling files
#	  [ -e /etc/bind/db.10.jnl ] && rm /etc/bind/db.10.jnl
#	  [ -e /etc/bind/db.linuxmuster.jnl ] && rm /etc/bind/db.linuxmuster.jnl
#	fi
#       [ -n "$bind_stopped" ] && /etc/init.d/bind9 start

        # dhcpd.conf
#        grep -q rndc-key /etc/dhcp3/dhcpd.conf || dhcpd_update=yes
#        grep -q "option ntp-servers" /etc/dhcp3/dhcpd.conf || dhcpd_update=yes
#        if [ -n "$dhcpd_update" ]; then
#          echo "Updating dhcp-server configuration ..."
#          cp /etc/dhcp3/dhcpd.conf /etc/dhcp3/dhcpd.conf-dpkg.orig
#          sed -e "s/@@servername@@/${servername}/g
#                  s/@@domainname@@/${domainname}/g
#                  s/@@serverip@@/${serverip}/g
#                  s/@@ipcopip@@/${ipcopip}/g
#                  s/@@broadcast@@/${broadcast}/g
#                  s/@@internalnet@@/${internalnet}/g
#                  s/@@internsub@@/${internsub}/g
#                  s/@@internmask@@/${internmask}/g" /var/lib/linuxmuster/config-dynamic/03_dhcp3-server/dhcpd.conf > /etc/dhcp3/dhcpd.conf
#        fi

#	# increasing lease time in dhcpd.conf
#	if grep -q ^"default-lease-time 600;" /etc/dhcp3/dhcpd.conf; then
#		echo "Increasing default-lease-time from 600 to 86400 secs ..."
#		sed -e 's/^default-lease-time 600;/default-lease-time 86400;/' /etc/dhcp3/dhcpd.conf > /etc/dhcp3/dhcpd.conf.tmp
#		mv /etc/dhcp3/dhcpd.conf.tmp /etc/dhcp3/dhcpd.conf
#		dhcpd_update="yes"
#	fi
#	if grep -q ^"max-lease-time 7200;" /etc/dhcp3/dhcpd.conf; then
#		echo "Increasing max-lease-time from 7200 to 86400 secs ..."
#		sed -e 's/^max-lease-time 7200;/max-lease-time 86400;/' /etc/dhcp3/dhcpd.conf > /etc/dhcp3/dhcpd.conf.tmp
#		mv /etc/dhcp3/dhcpd.conf.tmp /etc/dhcp3/dhcpd.conf
#		dhcpd_update="yes"
#	fi
#	if grep -q "default-lease-time 60;" /etc/dhcp3/dhcpd.conf; then
#		echo "Increasing default-lease-time from 60 to 3600 secs ..."
#		sed -e 's/default-lease-time 60;/default-lease-time 3600;/' /etc/dhcp3/dhcpd.conf > /etc/dhcp3/dhcpd.conf.tmp
#		mv /etc/dhcp3/dhcpd.conf.tmp /etc/dhcp3/dhcpd.conf
#		dhcpd_update="yes"
#	fi
#	if grep -q "max-lease-time 60;" /etc/dhcp3/dhcpd.conf; then
#		echo "Increasing max-lease-time from 60 to 3600 secs ..."
#		sed -e 's/max-lease-time 60;/max-lease-time 3600;/' /etc/dhcp3/dhcpd.conf > /etc/dhcp3/dhcpd.conf.tmp
#		mv /etc/dhcp3/dhcpd.conf.tmp /etc/dhcp3/dhcpd.conf
#		dhcpd_update="yes"
#	fi

#        [ -n "$dhcpd_update" ] && /etc/init.d/dhcp3-server restart


        # apt
        [ -e /etc/apt/apt.conf ] && cp /etc/apt/apt.conf /etc/apt/apt.conf.dpkg-old
        echo "Updating /etc/apt/apt.conf ..."
        cp -f /var/lib/linuxmuster/config-static/etc/apt/apt.conf /etc/apt
        [ -e /etc/apt/preferences ] && cp /etc/apt/preferences /etc/apt/preferences.dpkg-old
        echo "Updating /etc/apt/preferences ..."
        cp -f /var/lib/linuxmuster/config-static/etc/apt/preferences /etc/apt
	# checking for correct sources.list
	while read line; do
		[ "${line:0:3}" != "deb" ] && continue
		if ! grep -q "$line" /etc/apt/sources.list; then
			[ -z "$slist_changed" ] && gzip -c /etc/apt/sources.list > $BACKUPDIR/sources.list-$DATETIME.gz
			echo "Adding $line to /etc/apt/sources.list ..."
			echo "$line" >> /etc/apt/sources.list
			slist_changed=yes
		fi
	done </var/lib/linuxmuster/config-static/etc/apt/sources.list.online

        # environment
        if [ ! -e /etc/environment ]; then
          echo "Updating /etc/environment ..."
          cp -f /var/lib/linuxmuster/config-static/etc/environment /etc
          cp -f /var/lib/linuxmuster/config-static/etc/profile /etc
        fi

        # shadow passwords
        if [ ! -e /etc/shadow ]; then
          shadowconfig on
        fi
	
	# fixing webmin unix authentication
	if ! grep -q "root:x:0::" /etc/webmin/miniserv.users; then
		echo "Fixing webmin unix authentication for root ..."
		cp /etc/webmin/miniserv.users /etc/webmin/miniserv.users.dpkg-orig
		cp /var/lib/linuxmuster/config-static/etc/webmin/* /etc/webmin
		chown root:shadow /etc/webmin/miniserv.users*
		chmod 640 /etc/webmin/miniserv.users*
		/etc/init.d/webmin restart
	fi

        # remove false link to backup mountpoint
	[ -L /_backup ] && rm /_backup

        # openldap permissions
        chown root:root /etc/ldap/ldap.conf
        chmod 644 /etc/ldap/ldap.conf
        chown root:root /etc/ldap/slapd.conf
        chmod 600 /etc/ldap/slapd.conf
        chown root:root /etc/odbc.ini
        chmod 644  /etc/odbc.ini

        # bug #96
#        if [ -L /usr/sbin/sendmail ]; then
#          echo "FATAL: Bug #96 detected!"
#          echo " You _have_ to reinstall postfix ASAP!"
#        fi

        # bug #130, fixing slapd.conf
#        if ! grep -q ^password-hash /etc/ldap/slapd.conf; then
#          echo "Fixing slapd.conf (Bug #130) ..."
#          cp  /etc/ldap/slapd.conf /etc/ldap/slapd.conf.dpkg-old
#          sed -e '/^argsfile/a\
#password-hash   {CRYPT}' /etc/ldap/slapd.conf.dpkg-old > /etc/ldap/slapd.conf
#          slapd_update=yes
#        fi

        # adding sizelimit statement to slapd.conf
#        if ! grep -q ^sizelimit /etc/ldap/slapd.conf; then
#          echo "Adding sizelimit statement to slapd.conf ..."
#          echo "sizelimit	-1" >> /etc/ldap/slapd.conf
#          slapd_update=yes
#        fi

	# fix ldap authentication
#	template=/usr/share/sophomorix/config-templates/ldap/slapd-standalone.conf.template
#	if grep -q "by \* none" $template; then
#	  sed -e 's/by \* none/by \* read/g' $template > ${template}.tmp
#	  mv ${template}.tmp $template
#	fi
#	if grep -q "by \* none" /etc/ldap/slapd.conf; then
#	  sed -e 's/by \* none/by \* read/g' /etc/ldap/slapd.conf > /etc/ldap/slapd.conf.tmp
#	  mv /etc/ldap/slapd.conf.tmp  /etc/ldap/slapd.conf
#         slapd_update=yes
#	fi

        chmod 600 /etc/ldap/slapd.conf*
#        [ -n "$slapd_update" ] && /etc/init.d/slapd restart

        # bug #123, adding ipcop handling to /etc/init.d/networking
        if ! grep -q ^doipcop /etc/init.d/networking; then
          echo "Updating /etc/init.d/networking (Bug #123) ..."
          cp /etc/init.d/networking /etc/init.d/networking.dpkg-dist
          cp /var/lib/linuxmuster/config-static/etc/init.d/networking /etc/init.d
        fi
	# fixing typo in /etc/init.d/networking
        if grep -q dopicop /etc/init.d/networking; then
          echo "Fixing typo in /etc/init.d/networking ..."
          cp /var/lib/linuxmuster/config-static/etc/init.d/networking /etc/init.d
        fi
	[ -e /etc/init.d/networking.dpkg-dist ] && chmod 644 /etc/init.d/networking.dpkg-dist

	# remove old nameif script and installing new linuxmuster-nic-setup
	if [ -e /etc/init.d/nameif ]; then
		echo "Fixing mac address handling (Bug #86) ..."
		#  first save the mac assignments
		mac_extern=`grep "^nameif extern" /etc/init.d/nameif | cut -f3 -d" "`
		if [ -n "$mac_extern" ]; then
			toupper $mac_extern
			mac_extern=$RET
			db_set linuxmuster-base/mac_extern $mac_extern || true
		fi
		mac_intern=`grep "^nameif intern" /etc/init.d/nameif | cut -f3 -d" "`
		if [ -n "$mac_intern" ]; then
			toupper $mac_intern
			mac_intern=$RET
			db_set linuxmuster-base/mac_intern $mac_intern || true
		fi
		mac_wlan=`grep "^nameif wlan" /etc/init.d/nameif | cut -f3 -d" "`
		if [ -n "$mac_wlan" ]; then
			toupper $mac_wlan
			mac_wlan=$RET
			db_set linuxmuster-base/mac_wlan $mac_wlan || true
		fi
		mac_dmz=`grep "^nameif dmz" /etc/init.d/nameif | cut -f3 -d" "`
		if [ -n "$mac_dmz" ]; then
			toupper $mac_dmz
			mac_dmz=$RET
			db_set linuxmuster-base/mac_dmz $mac_dmz || true
		fi
		# write them to network.settings
		grep -v ^mac_ $NETWORKSETTINGS > $NETWORKSETTINGS.tmp
		mv $NETWORKSETTINGS.tmp $NETWORKSETTINGS
		echo "mac_extern=$mac_extern" >> $NETWORKSETTINGS
		echo "mac_intern=$mac_intern" >> $NETWORKSETTINGS
		echo "mac_wlan=$mac_wlan" >> $NETWORKSETTINGS
		echo "mac_dmz=$mac_dmz" >> $NETWORKSETTINGS
		update-rc.d -f nameif remove
		mv /etc/init.d/nameif /etc/init.d/nameif.dpkg-old
		chmod 644 /etc/init.d/nameif.dpkg-old

	fi

	# restoring PDF-Printer
	if [ ! -f /etc/cups/ppd/PDF-Printer.ppd ]; then
		echo "Restoring PDF-Printer driver ..."
		cp /var/lib/linuxmuster/config-static/etc/cups/ppd/PDF-Printer.ppd /etc/cups/ppd
		cups_restart=yes
	fi
	# restoring PDF-Printer definition
	if ! grep -q PDF-Printer /etc/cups/printers.conf; then
		echo "Restoring PDF-Printer definition ..."
		cp /etc/cups/printers.conf /etc/cups/printers.conf.dpkg-old
		cat /var/lib/linuxmuster/config-static/etc/cups/printers.conf | grep -v ^# >> /etc/cups/printers.conf
		cups_restart=yes
	fi
	# upgrading cups-pdf printer driver
	if [ -f /usr/share/ppd/cups-pdf/PostscriptColor.ppd ]; then
		if ! diff -q /usr/share/ppd/cups-pdf/PostscriptColor.ppd /etc/cups/ppd/PDF-Printer.ppd &> /dev/null; then
			echo "Upgrading cups-pdf printer driver ..."
			cp /usr/share/ppd/cups-pdf/PostscriptColor.ppd /etc/cups/ppd/PDF-Printer.ppd
			cups_restart=yes
		fi
	fi
	# fixing cupsys init start nr
	if [ -e /etc/rc2.d/S20cupsys ]; then
		echo "Fixing cupsys' init start nr ..."
		update-rc.d -f cupsys remove
		update-rc.d cupsys start 21 2 3 4 5 . stop 19 0 1 6 .
		cups_restart=yes
	fi
	if [ -n "$cups_restart" ]; then
			/etc/init.d/cupsys force-reload || true
	fi

	# extraschueler.txt, extrakurse.txt
	for i in extraschueler.txt extrakurse.txt entfernen.txt sperrklassen.txt; do
		[ -e "/etc/sophomorix/user/$i" ] || cp /var/lib/linuxmuster/config-static/etc/sophomorix/user/$i /etc/sophomorix/user
	done

        # removing old cyrus21 runlevel links
	if [ -e /etc/rc2.d/S20cyrus2.2 ]; then
		if [ -e /etc/rc2.d/S20cyrus21 ]; then
			update-rc.d -f cyrus21 remove
		fi
	fi

	# updating schulkonsole's db.conf
	if grep -q ^"Username=ldap" /etc/linuxmuster/schulkonsole/db.conf; then
		echo "Updating database configuration for linuxmuster-schulkonsole ..."
		cp /var/lib/linuxmuster/config-static/etc/linuxmuster/schulkonsole/db.conf /etc/linuxmuster/schulkonsole/db.conf.obsolete
		cp /var/lib/linuxmuster/config-static/etc/linuxmuster/schulkonsole/db.conf /etc/linuxmuster/schulkonsole
		chown www-data:www-data /etc/linuxmuster/schulkonsole/db.conf*
		chmod 600 /etc/linuxmuster/schulkonsole/db.conf*
	fi

	# repair admin accounts and groupmappings
	$SCRIPTSDIR/repair-admins.sh

	# provide paedML index.html
	indexhtml=/var/www/apache2-default/index.html
	template=${indexhtml}.tpl
	if [ -e "$template" ]; then
		if ! grep "$servername.$domainname" $indexhtml &> /dev/null; then
			[ -e "$indexhtml" ] && mv $indexhtml ${indexhtml}.dpkg-old
			sed -e "s/@@servername@@/$servername/g
			        s/@@domainname@@/$domainname/g" $template > $indexhtml
		fi
	fi

	# updating release information
	if grep -q "$oldissue" /etc/issue; then
		buildnr=`cat /etc/issue | cut -f4 -d" "`
		echo "$releasename / Release $releasenr / Build $buildnr / Codename $codename" > /etc/issue
		cp /etc/issue /etc/issue.net
		cat /etc/issue
	fi

	# removing passwd3 files (1.1-7)
	[ -e /etc/horde/passwd3 ] && rm -rf /etc/horde/passwd3
	[ -e /usr/share/horde3/passwd ] && rm -rf /usr/share/horde3/passwd
	[ -e /usr/share/doc/passwd3 ] && rm -rf /usr/share/doc/passwd3

        # restoring internal firewall
        . /etc/default/linuxmuster-base
        if [ "$START_LINUXMUSTER" = "yes" ]; then
          if ! iptables -L | grep -q "$FIREWALLTEST"; then
            /etc/init.d/linuxmuster-base start
          fi
        fi

	# adding imaging variable (1.2-14)
	if ! grep -q ^imaging $NETWORKSETTINGS; then
		if [ -z "$imaging" ]; then
			imaging=rembo
			db_set linuxmuster-base/imaging $imaging || true
		fi
		echo "imaging=$imaging" >> $NETWORKSETTINGS
	fi

	# patch path to wimport_data in dist.conf (1.1-8)
	if [ -n "$imaging" ]; then
		case "$imaging" in
			linbo|tivoli)
				sed -e "s/^WIMPORTDATA=.*/WIMPORTDATA=\"\/etc\/linuxmuster\/workstations\"/" -i /usr/share/linuxmuster/config/dist.conf
				if [[ -L "$SYSCONFDIR/workstations" && -f "$REMBOFILES/files/global/wimport_data" ]]; then
					rm $SYSCONFDIR/workstations
					cp $REMBOFILES/files/global/wimport_data $SYSCONFDIR/workstations
				fi
				;;
			*)
				sed -e "s/^WIMPORTDATA=.*/WIMPORTDATA=\"\$REMBOFILES\/files\/global\/wimport_data\"/" -i /usr/share/linuxmuster/config/dist.conf
				;;
		esac
	fi

	# remove obsolete unmount_shm from backup.conf (1.2-17)
	if grep -q ^unmount_shm /etc/linuxmuster/backup.conf; then
		echo "Removing obsolete parameter unmount_shm from backup.conf ..."
		cp /etc/linuxmuster/backup.conf /etc/linuxmuster/backup.conf.dpkg-old
		sed -e 's/^unmount_shm.*/# obsolete with linuxmuster-base 1.2-17/' -i /etc/linuxmuster/backup.conf
	fi

	# change obsolete cyrus21 to cyrus2.2 in services parameter in backup.conf (1.2-25)
	if grep -w cyrus21 /etc/linuxmuster/backup.conf | grep -qv ^#; then
		echo "Changing service cyrus21 to cyrus2.2 in backup.conf ..."
		cp /etc/linuxmuster/backup.conf /etc/linuxmuster/backup.conf.dpkg-old
		sed -e 's/cyrus21/cyrus2.2/' -i /etc/linuxmuster/backup.conf
	fi

	# custom login/logout scripts (1.2-6)
	for i in in out; do
		if [ ! -e "$NETLOGONDIR/custom-log$i.sh" ]; then
			echo "Copying $NETLOGONDIR/custom-log$i.sh ..."
			cp /var/lib/linuxmuster/config-static$NETLOGONDIR/custom-log$i.sh $NETLOGONDIR
		fi
	done
	# reparing permissions in netlogondir (1.2-15)
	chown $ADMINISTRATOR:$DOMADMINS $NETLOGONDIR/*
	chmod 664 $NETLOGONDIR/*

	# removing obsolete samba-userlog lockfile (1.2-10)
	if [ -e "${USERLOG}.lock" ]; then
		echo "Removing obsolete lockfile ${USERLOG}.lock ..."
		rm -f ${USERLOG}.lock
	fi

	# linking registry-patches to administrator's home (1.2-15)
	if [ ! -e "$ADMINSHOME/$ADMINISTRATOR/registry-patches" ]; then
		echo "Linking registry-patches to administrator's home ..."
		ln -sf /usr/share/linuxmuster/registry-patches $ADMINSHOME/$ADMINISTRATOR/registry-patches
	fi

	# linbo related update stuff
	if [ "$imaging" = "linbo" ]; then
		# updating rsyncd.conf according to linbo revision 119 (1.2-13)
		if ! grep -q pre-xfer /etc/rsyncd.conf; then
			echo "Updating rsync configuration ..."
			cp /var/lib/linuxmuster/config-static/etc/rsyncd.conf /etc
			/etc/init.d/rsync restart
		fi
		# updating dhcp configuration according to linbo 1.0.230-2 (1.3-3)
		if ! grep -q ^"option dhcp-parameter-request-list" /etc/dhcp3/dhcpd.conf; then
			echo "Updating dhcp-server configuration ..."
			backup_file /etc/dhcp3/dhcpd.conf
			sed -e "s/@@servername@@/${servername}/g
				s/@@domainname@@/${domainname}/g
				s/@@serverip@@/${serverip}/g
				s/@@ipcopip@@/${ipcopip}/g
				s/@@broadcast@@/${broadcast}/g
				s/@@internalnet@@/${internalnet}/g
				s/@@internsub@@/${internsub}/g
				s/@@internmask@@/${internmask}/g" /var/lib/linuxmuster/config-dynamic/03_dhcp3-server/dhcpd.conf.linbo > /etc/dhcp3/dhcpd.conf
			/etc/init.d/dhcp3-server force-reload
		fi
	fi

	# important message if upgrade is necessary
        if [ -n "$upgrade" ]; then
          echo "IMPORTANT!"
          echo "Be sure to make apt-get update and apt-get dist-upgrade very soon!"
        fi

      fi

      ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop

exit 0

