#!/bin/bash
# internal firewall script
# 30.03.2006 by Thomas Schmitt for Linux-Musterloesung
# LMZ Baden-Wuerttemberg, <schmitt@lmz-bw.de>

# source default settings
. /etc/default/linuxmuster-base || exit 1

# check if we are allowed to start
[ "$START_LINUXMUSTER" = "yes" ] || exit 0

# source linuxmuster defaults
. /usr/share/linuxmuster/config/dist.conf || exit 1

# source helperfunctions
. $HELPERFUNCTIONS || exit 1

stop_firewall() {


  echo -n "Stopping internal firewall"

  # clear chains
  iptables -D INPUT -i $IFACE -j IN-$IFACE
  iptables -F IN-$IFACE
  iptables -X IN-$IFACE

  echo "."

}

start_firewall() {

    # clear chains if there are any
    if iptables -L IN-$IFACE &> /dev/null; then stop_firewall; fi

    echo -n "Starting internal firewall"

    # create new chains
    iptables -N IN-$IFACE
    iptables -A INPUT -i $IFACE -j IN-$IFACE

    # accept stated connections
    iptables -A IN-$IFACE -m state --state RELATED,ESTABLISHED -j ACCEPT

    # accept ipcop
    iptables -A IN-$IFACE -s $ipcopip/32 -j ACCEPT

    # accept from internet
    iptables -A IN-$IFACE -s ! $internalnet/$internmask_short -j ACCEPT

    # read mandatory open ports
    if [ -f "$BASEPORTS" ]; then
      while read proto portrange; do
        [ "${proto:0:1}" = "#" ] && continue
        [[ -z "$portrange" || -z "$proto" ]] && continue
        portrange=${portrange//,/ }
        for p in $portrange; do
          iptables -A IN-$IFACE -p $proto --dport $p -j ACCEPT
        done
      done <$BASEPORTS
    fi

    # read mac addresses
    macs=`grep -v ^# $WIMPORTDATA | awk -F\; '{ print $4 }' -`
    # read allowed ports
    if [ -f "$ALLOWEDPORTS" ]; then
      while read proto portrange; do
        [ "${proto:0:1}" = "#" ] && continue
        [[ -z "$portrange" || -z "$proto" ]] && continue
        portrange=${portrange//,/ }
        for p in $portrange; do
          for m in $macs; do
            validmac $m && iptables -A IN-$IFACE -p $proto -m mac --mac-source $m --dport $p -j ACCEPT
          done
        done
      done <$ALLOWEDPORTS
    fi

    # strip blocked mac addresses
    for m in `cat $BLOCKEDHOSTSINTRANET`; do
      macs=${macs/$m/}
    done

    # allow blocked ports
    if [ -f "$BLOCKEDPORTS" ]; then
      while read proto portrange; do
        [ "${proto:0:1}" = "#" ] && continue
        [[ -z "$portrange" || -z "$proto" ]] && continue
        portrange=${portrange//,/ }
        for p in $portrange; do
          for m in $macs; do
            validmac $m && iptables -A IN-$IFACE -p $proto -m mac --mac-source $m --dport $p -j ACCEPT
          done
        done
      done <$BLOCKEDPORTS
    fi

    # ICMP: accept ping
    iptables -A IN-$IFACE -p icmp --icmp-type 8 -j ACCEPT

    # reject the rest
    iptables -A IN-$IFACE -j REJECT

    echo "."

}

case "$1" in

  start)
    start_firewall
    ;;

  stop)
    stop_firewall
    ;;

  restart|force-reload)
    stop_firewall
    start_firewall
    ;;

  *)
    echo "Usage: $0 <start|stop|restart|force-reload>"
    ;;

esac

exit 0
