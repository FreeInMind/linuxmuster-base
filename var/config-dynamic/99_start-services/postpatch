# $Id: postpatch 1334 2012-07-20 12:03:39Z tschmitt $

echo "### 99_start-services postpatch"

# repair permissions for root's scheduled cron jobs
chown root:crontab /var/spool/cron/crontabs/root
chmod 600 /var/spool/cron/crontabs/root

# waiting for ipcop to come up 
c=0
maxwait=300
while [ $c -lt $maxwait ]; do

	if ping -c 2 $ipcopip &> /dev/null; then

		# upload root's public key if certficates were renewed
		if [[ "$update_certs" = "yes" && "$1" = "--modify" ]]; then

			echo "Uploading root's ssh key to ipcop ..."
			tmpdir=/var/tmp/.ssh
			mkdir -p $tmpdir
			cp /root/.ssh/id_dsa.pub $tmpdir/authorized_keys
			chmod 600 $tmpdir/authorized_keys
			$SCRIPTSDIR/ipcop-upload-pkg.exp $ipcoppw $tmpdir /root $ipcopip
			rm -rf $tmpdir
			ipcoptest=yes

		fi

		# test ssh connection to intregated ipcop
		#if [[ -z "$ipcoptest" && ! -e /root/.ssh/known_hosts ]]; then
		#	echo "Testing ssh connection to IPCop ..."
		#	$SCRIPTSDIR/ipcop-test-ssh.exp $ipcopip
		#fi

		# restart ipcop's proxy
		#echo "Restarting ipcop's squid ..."
		#exec_ipcop /usr/bin/find "/var/ipfire/urlfilter -name \*.db -exec chmod 666 '{}' \;"
		#exec_ipcop /usr/local/bin/restartsquid

		success=yes
		break
	fi

	let c+=5
	echo "Waiting for IPCop, $c of $maxwait seconds ..."
	sleep 5

done

if [ "$success" != "yes" ]; then
	echo "Fatal! IPCop does not come up!"
fi

# only if internet connection
if ping -c 2 www.linuxmuster.net &> /dev/null; then
	# set time
	ntpdate pool.ntp.org
	hwclock --utc
fi

# start services not yet started
services="dbus openbsd-inetd atd cron openntpd linuxmuster-base"
for service in $services; do
 [ -e "/etc/init.d/$service" ] && /etc/init.d/$service start
 [ -e "/etc/init/$service.conf" ] && start $service
done

# set installed flag
touch $INSTALLED

# reconfigure linuxmuster-base to fix what has been not yet fixed, deprecated?
dpkg-reconfigure linuxmuster-base

# repair linbo stuff
dpkg-reconfigure linuxmuster-linbo
status tftp-hpa | grep -q start && stop tftp-hpa
start tftp-hpa
/etc/init.d/rsync restart

# apply workstation data if internal net has changed
if [[ "$1" = "--modify" && "$internsub" != "$internsub_old" ]]; then
	if [ "$imaging" = "rembo" ]; then
		WIMPORTDATA=$REMBOFILES/files/global/wimport_data
	else
		WIMPORTDATA=$SYSCONFDIR/workstations
	fi
	backup_file $WIMPORTDATA
	n=$internsub; o=$internsub_old
	while [ $n -lt $maxsub ]; do
		sed -e "s/;10.$o./;10.$n./g" -i $WIMPORTDATA
		let n+=1
		let o+=1
	done
	rm -f $LINBODIR/*.torrent
	import_workstations
	wsimport=yes
	import_printers
fi

# apply workstation data if imaging has changed, deprecated
#if [[ "$1" = "--modify" && -z "$wsimport" && "$imaging" != "$imaging_old" && -s "$WIMPORTDATA" ]]; then
#	import_workstations
#fi

# remove obsolete cron jobs, deprecated?
#for i in kronolith2 php4 uucp; do
#	[ -e "/etc/cron.d/$i" ] && rm /etc/cron.d/$i
#done

