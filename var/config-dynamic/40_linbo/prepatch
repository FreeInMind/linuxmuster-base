# $Id$
#

# create tftpd-hpa configs if necessary
tpldir="/usr/share/linuxmuster-linbo/templates"
tpl="$tpldir/tftpd-hpa.default"
conf="/etc/default/tftpd-hpa"
if ! grep -q "$LINBODIR" "$conf"; then
 echo "Patching $conf."
 backup_file "$conf"
 sed -e "s|@@linbodir@@|$LINBODIR|" "$tpl" > "$conf"
fi
conf="/etc/tftp_remap.conf"
tpl="$tpldir/$(basename $conf)"
if [ ! -e "$conf" ]; then
 echo "Providing $conf."
 cp "$tpl" "$conf"
fi

# check for tftp in inetd.conf
conf=/etc/inetd.conf
if grep -q ^tftp "$conf"; then
 echo "Deactivating tftp in $conf."
 backup_file "$conf"
 sed -e 's|^tftp|#tftp|' -i "$conf"
fi

# stuff to do on first time install
if [ "$1" = "--first" ]; then

 # patch rsyncd.secrets with admin password
 [ -e /etc/rsyncd.secrets ] && backup_file /etc/rsyncd.secrets
 if grep ^linbo: /etc/rsyncd.secrets &> /dev/null; then
  sed -e "s/^linbo:.*/linbo:$adminpw/" -i /etc/rsyncd.secrets
 else
  echo "linbo:$adminpw" >> /etc/rsyncd.secrets
 fi
  # provide empty workstations data
 rm -rf $SYSCONFDIR/workstations

else # modify

 # restore workstations file from link if coming from rembo
 if [ "$imaging_old" = "rembo" ]; then
  if [ -L "$SYSCONFDIR/workstations" ]; then
   rm $SYSCONFDIR/workstations
  else
   backup_file $SYSCONFDIR/workstations
  fi
  cp $REMBOFILES/files/global/wimport_data $SYSCONFDIR/workstations
 fi

fi

touch $SYSCONFDIR/workstations

# patch path to wimport_data in dist.conf
backup_file /usr/share/linuxmuster/config/dist.conf
sed -e "s/^WIMPORTDATA=.*/WIMPORTDATA=\"\$SYSCONFDIR\/workstations\"/" -i /usr/share/linuxmuster/config/dist.conf

# if no linbo password then grep rsync password from rembo.conf or if that fails take simply muster as password
if ! grep ^linbo: /etc/rsyncd.secrets &> /dev/null; then
 linbopw=`grep ^NetPassword /etc/rembo/rembo.conf | awk -F\" '{ print $2 }'`
 [ -z "$linbopw" ] && linbopw=muster
 echo "linbo:$linbopw" >> /etc/rsyncd.secrets
fi
chmod 600 /etc/rsyncd.secrets

# check for initial rsync configuration and copy it if necessary
teststr="# automatically created by linuxmuster-setup"
grep "$teststr" /etc/rsyncd.conf &> /dev/null || cp $STATICTPLDIR/etc/rsyncd.conf /etc

# link pxelinux.0 to linbo dir
[ -e "$LINBODIR/pxelinux.0" ] || ln -sf /usr/lib/syslinux/pxelinux.0 $LINBODIR/pxelinux.0

# open internal firewall for multicasting and rsync
. /etc/default/linuxmuster-linbo
if ! grep ^udp $ALLOWEDPORTS | grep -q $PORTBASE:; then
 backup_file $ALLOWEDPORTS
 PORTMAX=$PORTBASE
 let PORTMAX+=100
 PORTS=`grep ^udp $ALLOWEDPORTS | awk '{ print $2 }'`
 PORTS="$PORTS,$PORTBASE:$PORTMAX"
 sed -e "s/^udp.*/udp $PORTS/" -i $ALLOWEDPORTS
fi
if ! grep ^tcp $BASEPORTS | grep -qw rsync; then
 backup_file $BASEPORTS
 PORTS=`grep ^tcp $BASEPORTS | awk '{ print $2 }'`
 PORTS="$PORTS,rsync"
 sed -e "s/^tcp.*/tcp $PORTS/" -i $BASEPORTS
fi

# patch start.confs with serverip
for i in $LINBODEFAULTCONF `find $LINBODIR/ -type f -name 'start.conf*'`; do
 backup_file $i
 sed -e "s/^Server = \([0-9]\{1,3\}[.]\)\{3\}[0-9]\{1,3\}/Server = $serverip/" -i $i
done

# patch regs with workgroup
for i in `find $LINBODIR/ -type f -name '*.reg'`; do
 backup_file $i
 sed -e "s/^\"DefaultDomainName\"=.*/\"DefaultDomainName\"=\"$workgroup\"/
         s/^\"Workgroup\"=.*/\"Workgroup\"=\"$workgroup\"/" -i $i
done

# patch start variables of tftpd-hpa and rsync
sed -e "s/^RUN_DAEMON=.*/RUN_DAEMON=yes/" -i /etc/default/tftpd-hpa
sed -e "s/^RSYNC_ENABLE=.*/RSYNC_ENABLE=true/" -i /etc/default/rsync

# check for images and start multicast
update-rc.d linbo-multicast defaults
res=`find $LINBODIR -name '*.cloop'`
if [ -n "$res" ]; then
 sed -e "s/^START_MULTICAST=.*/START_MULTICAST=yes/" -i /etc/default/linuxmuster-linbo
 /etc/init.d/linbo-multicast start
else
 sed -e "s/^START_MULTICAST=.*/START_MULTICAST=no/" -i /etc/default/linuxmuster-linbo
fi

# linbo administrative user
if ! check_id linbo; then
 linbopasswd=`grep ^linbo /etc/rsyncd.secrets | awk -F\: '{ print $2 }'`
 if [ -n "$linbopasswd" ]; then
  echo "Creating linbo user ..."
  if [ -n "$SOPHOMORIX" ]; then
   sophomorix-useradd --administrator linbo --unix-group $ADMINGROUP --shell /bin/false --gecos "LINBO Administrator" &> /dev/null || true
   sophomorix-passwd --user linbo --pass $linbopasswd &> /dev/null || true
  else
   smbldap-useradd -a -c "LINBO Administrator" -N LINBO -S Administrator -s /bin/false -g $ADMINGROUP -d $ADMINSHOME/linbo -m linbo
   echo -e "$linbopasswd\n$linbopasswd\n" | smbldap-passwd -s linbo
  fi
  smbldap-usermod -H '[UX         ]' linbo || true
 fi
fi

# check for linbo mail wrapper in /etc/aliases
if ! grep -q ^linbo: /etc/aliases; then
 backup_file /etc/aliases
 sed -e "/^root:/a\
linbo: \"\|\/usr\/share\/linuxmuster-linbo\/mail2log.sh\"" -i /etc/aliases
 newaliases
fi

# change owner of logdir to nobody
[ -d "$LOGDIR/linbo" ] || mkdir -p $LOGDIR/linbo
chown nobody $LOGDIR/linbo

# start necessary services
/etc/init.d/tftpd-hpa start
/etc/init.d/rsync start

# don't start these on first install
if [ "$1" != "--first" ]; then
 /etc/init.d/bittorrent start
 /etc/init.d/linbo-bittorrent start
 /etc/init.d/linbo-multicast start
else
 [ -e /etc/default/bittorrent ] && sed -e 's|^START_BTTRACK=.*|START_BTTRACK=0|' -i /etc/default/bittorrent
 [ -e /etc/default/linbo-bittorrent ] && sed -e 's|^START_BITTORRENT=.*|START_BITTORRENT=0|' -i /etc/default/linbo-bittorrent
 [ -e /etc/default/linuxmuster-linbo ] && sed -e 's|^START_MULTICAST=.*|START_MULTICAST=no|' -i /etc/default/linuxmuster-linbo
fi

