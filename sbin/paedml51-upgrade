#!/bin/bash
#
# upgrade paedML 4.0.x to 5.1.x
# online wrapper script
#
# cmdline parameter: path to paedML/openML iso file
# downloads openML iso if no iso file is given on cmdline
# invokes at least upgrade script
#
# $Id: paedml50-upgrade 1185 2011-12-05 17:34:14Z tschmitt $
# 
# Thomas Schmitt
# <schmitt@lmz-bw.de>
# GPL V3
#

. /usr/share/linuxmuster/config/dist.conf
. $HELPERFUNCTIONS
LOGFILE="$LOGDIR/paedml51-upgrade.log"
NOW=`date`


# print help
usage(){
 echo "Usage: `basename $0` <options>"
 echo
 echo "Options:"
 echo
 echo " -c                   Upgrade with real paedML/openML-CDROM placed in the"
 echo "                      local drive."
 echo " -d                   Download and upgrade with openML ISO. This is the default."
 echo " -f                   Force upgrade without version test."
 echo " -i <path to isofile> Use this local isofile to upgrade."
 echo " -h                   Show this help."
 echo
 echo "Note: -c, -d and -i exclude each other and will not be evalutated if"
 echo "running directly from cdrom."
 echo
 exit 1
}


# downloading openML/paedML iso
download(){
 DLDIR=$ADMINSHOME/$ADMINISTRATOR/iso
 mkdir -p $DLDIR
 if [ ! -s "$DLDIR/$FREECDNAME" -a ! -s "$DLDIR/${FREECDNAME}.md5" ]; then
  echo "Lade $FREECDNAME herunter ..." | tee -a $LOGFILE
  rm -f $DLDIR/${FREECDNAME}*
  wget $ISOURL/$FREECDNAME -O $DLDIR/$FREECDNAME | tee -a $LOGFILE
  wget $ISOURL/${FREECDNAME}.md5 -O $DLDIR/${FREECDNAME}.md5 | tee -a $LOGFILE
  chown $ADMINISTRATOR $DLDIR -R
 else
  echo "Überspringe Download. $FREECDNAME ist bereits in $DLDIR vorhanden." | tee -a $LOGFILE
 fi
 cd $DLDIR
 RC=0
 echo "Überpruefe MD5-Summe der IS0-Datei ..." | tee -a $LOGFILE
 if ! md5sum -c ${FREECDNAME}.md5; then
  echo "Prüfsummenfehler!" | tee -a $LOGFILE
  RC=1
 fi
 RC="0" && checked=yes
 cd ~
 # mount iso
 if [ "$RC" = "0" ]; then
  mount -o loop "$DLDIR/$FREECDNAME" "$CDROOT" || RC=1
 fi
 return "$RC"
}


echo | tee -a $LOGFILE
echo "####################################################################" | tee -a $LOGFILE
echo "# paedML/openML Linux Distributions-Upgrade auf Debian 5.0.3 Lenny #" | tee -a $LOGFILE
echo "# Startzeit: $NOW                         #" | tee -a $LOGFILE
echo "####################################################################" | tee -a $LOGFILE
echo | tee -a $LOGFILE


# check for firewall type
fwtype="$(debconf-show linuxmuster-base | grep fwconfig | awk -F \: '{ print $2}' | awk '{ print $1}')"
if [ "$fwtype" = "integrated" ]; then
 echo "Integrierte Firewall erkannt." | tee -a $LOGFILE
 echo "Ab Version 5.1.0 wird die integrierte Firewall nicht mehr unterstützt." | tee -a $LOGFILE
 echo "Stellen Sie auf dedizierte Firewall um und starten Sie das Upgrade danach erneut." | tee -a $LOGFILE
 exit 1
fi


# check if apt-ftparchive is present
APTARCHIVE="$(which apt-ftparchive)"
if [ -z "$APTARCHIVE" ]; then
 echo "Installiere apt-utils."
 aptitude -y install apt-utils
fi
APTARCHIVE="$(which apt-ftparchive)"
if [ -z "$APTARCHIVE" ]; then
 echo "apt-ftparchive nicht gefunden!"
 exit 1
fi


# first check for enough space on /var
if ! check_free_space /var 1500000; then
 echo "Zuwenig Speicherplatz unter /var. Stellen Sie sicher, dass dort 1,5GB freier Platz zur Verfügung steht." | tee -a $LOGFILE
 exit 1
fi


# check if we are running from cdrom
[ "$(basename "$0")" = "paedml51-cdrom-upgrade" ] && CDROOT="$(dirname "$0")"


# parse commandline arguments if not running from cdrom
while getopts ":cdfhi:" opt; do
 case $opt in
  c) CDROM=yes ;;
  d) DOWNLOAD=yes ;;
  f) FORCE=yes ;;
  i) ISOFILE="$OPTARG" ;;
  h) usage ;;
  \?) echo "Invalid option: -$OPTARG" >&2
      usage ;;
  :) echo "Option -$OPTARG requires an argument." >&2
     usage ;;
 esac
done

# check args
if [ -z "$CDROOT" ]; then
 
 [ -n "$CDROM" -a -n "$ISOFILE" -a -n "$DOWNLOAD" ] && usage
 [ -n "$CDROM" -a -n "$DOWNLOAD" ] && usage
 [ -n "$ISOFILE" -a -n "$DOWNLOAD" ] && usage
 [ -n "$CDROM" -a -n "$ISOFILE" ] && usage
 [ -z "$CDROM" -a -z "$ISOFILE" -a -z "$DOWNLOAD" ] && DOWNLOAD=yes
 if [ -n "$ISOFILE" -a ! -s "$ISOFILE" ]; then
  echo "$ISOFILE does not exist!"
  usage
 fi

 CDROOT=/cdrom
 mount | grep -q "$CDROOT" && umount "$CDROOT"

 if [ -n "$CDROM" ]; then
  mount "$CDROOT" || exit 1
 elif [ -s "$ISOFILE" ]; then
  mount -o loop "$ISOFILE" "$CDROOT" || exit 1
 else
  download || exit 1
 fi

fi


# check for nfs mounts
if mount | awk '{ print $5 }' | grep -qw nfs; then
 echo
 echo "Ein NFS-Share ist eingehängt! Bitte aushängen und nochmal starten!"
 exit 1
fi


# skip version test
if [ -n "$FORCE" ]; then

 echo "-f angegeben: überspringe Versionsprüfung!" | tee -a $LOGFILE
 echo

else

 if [ "$(cat /etc/debian_version)" != "4.0" ]; then
  echo "Das Upgrade lässt sich nur mit Debian 4.0 durchführen!" | tee -a $LOGFILE
  exit 0
 fi

 if ! grep -q "[op][pa][e][nd]ML Linux 4\.0\.6" /etc/issue; then
  echo "Das Upgrade lässt sich nur mit openML/paedML Linux 4.0.6 durchführen!" | tee -a $LOGFILE
  exit 0
 fi

fi # force


# put apt in unattended mode
tweak_apt() {
 export DEBIAN_FRONTEND=noninteractive
 export DEBIAN_PRIORITY=critical
 export DEBCONF_TERSE=yes
 export DEBCONF_NOWARNINGS=yes
 echo 'DPkg::Options {"--force-configure-any";"--force-confmiss";"--force-confold";"--force-confdef";"--force-bad-verify";"--force-overwrite";};' > /etc/apt/apt.conf.d/99upgrade
 echo 'aptitude::CmdLine::Ignore-Trust-Violations "true";' >> /etc/apt/apt.conf.d/99upgrade
 echo 'APT::Install-Recommends "0";' >> /etc/apt/apt.conf.d/99upgrade
 echo 'APT::Install-Suggests "0";' >> /etc/apt/apt.conf.d/99upgrade
 dpkg -l linuxmuster-base | grep -q ^ii &> /dev/null || aptitude -y install linuxmuster-base
}


# check medium if it was not already checked
if [ -z "$checked" ]; then
 echo "Prüfe Upgrade-Medium." | tee -a $LOGFILE
 cd "$CDROOT"
 RC=0
 if ! grep -q "ML Linux 5.1" .disk/info; then
  echo "Das ist keine paedML/openML-CDROM der Version 5.1.x!" | tee -a $LOGFILE
  RC=1
 fi
 if [ "$RC" = "0" ]; then
  if ! md5sum -c md5sum.txt; then
   echo "Prüfsummenfehler!" | tee -a $LOGFILE
   RC=1
  fi
 fi
 if [ "$RC" != "0" ]; then
  cd ~
  umount "$CDROOT" &> /dev/null
  eject "$CDROOT" &> /dev/null
  exit 1
 fi
fi


# copy packages from cdrom to cache and create local repo
find "$CDROOT/pool" -name \*.deb -exec cp -v '{}' /var/cache/apt/archives \; | tee -a $LOGFILE
echo "Erstelle lokales Paket-Repository ..." | tee -a $LOGFILE
cd /var/cache/apt/archives
"$APTARCHIVE" packages ./ > Packages | tee -a $LOGFILE
if [ ! -s Packages ]; then
 echo " fehlgeschlagen!" | tee -a $LOGFILE
 exit 1
fi


# check if newer linuxmuster-base package is on cdrom and install it
curver="$(dpkg -s linuxmuster-base | grep ^Version | awk '{ print $2 }')"
cdpkg="$(ls linuxmuster-base_*.deb | tail -1)"
if [ -z "$cdpkg" ]; then
 echo "Fehler! Kein linuxmuster-base-Paket gefunden!" | tee -a $LOGFILE
 exit 1
fi
cdver="$(echo "$cdpkg" | awk -F \_ '{ print $2 }')"
if [ "$cdver" \> "$curver" ]; then
 echo "Aktualisiere linuxmuster-base: $curver -> $cdver." | tee -a $LOGFILE
 dpkg --force-all -i "$cdpkg" | tee -a $LOGFILE
fi


# source upgradeskript from /tmp
cd ~
cp $DATADIR/upgrade/paedml51-upgrade.sh /tmp || exit 1
. /tmp/paedml51-upgrade.sh 2>&1 | tee -a $LOGFILE


# umount and eject cdrom if possible
umount "$CDROOT" &> /dev/null
eject "$CDROOT" &> /dev/null

